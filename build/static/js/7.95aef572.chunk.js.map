{"version":3,"sources":["Frontend/components/ProjectCard.jsx","Frontend/Frontend.jsx","Frontend/index.js","Frontend/Breadcrumbs.jsx"],"names":["ProjectCard","match","subRoute","isExact","className","to","url","name","class","style","backgroundImage","thumbnail","title","desc","path","component","Frontend","t","useTranslation","subRoutes","lazy","map","Breadcrumbs","crumbs","key","length"],"mappings":"iKAkCeA,G,MA9BK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5B,OACE,qCACGD,EAAME,SACL,qBAAKC,UAAU,eAAf,SACE,eAAC,IAAD,CAAMC,GAAE,UAAKJ,EAAMK,IAAX,YAAkBJ,EAASK,MAAnC,UACE,qBACEC,MAAM,aACNC,MAAO,CACLC,gBAAgB,OAAD,OACNR,EAASS,UADH,QAInB,sBAAKP,UAAU,YAAf,UACE,6BACE,4BAAIF,EAASU,UAEf,4BAAIV,EAASW,eAKrB,cAAC,IAAD,CACEC,KAAI,UAAKb,EAAMa,KAAX,YAAmBZ,EAASK,MAChCQ,UAAWb,EAASa,iB,sBCsBbC,G,MAtCE,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACVgB,EAAMC,cAAND,EACFE,EAAY,CAChB,CACEZ,KAAM,SACNQ,UAAWK,gBAAK,kBAAM,sDACtBR,MAAOK,EAAE,qCACTJ,KAAMI,EAAE,oCACRN,UAAW,qCAEb,CACEJ,KAAM,UACNQ,UAAWK,gBAAK,kBAAM,gCACtBR,MAAOK,EAAE,6BACTJ,KAAMI,EAAE,4BACRN,UAAW,sCAEb,CACEJ,KAAM,cACNQ,UAAWK,gBAAK,kBAAM,gCACtBR,MAAOK,EAAE,8BACTJ,KAAMI,EAAE,6BACRN,UAAW,sCAIf,OACE,qBAAKP,UAAU,WAAf,SAEGe,EAAUE,KAAI,SAACnB,GAAD,OACb,mCACE,cAAC,EAAD,CAAaD,MAAOA,EAAOC,SAAUA,aCzChCc,a,0DCuBAM,IAvBK,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKrB,OACE,8BAEGA,EAAOF,KAAI,WAAiBG,GAAjB,IAAGZ,EAAH,EAAGA,MAAON,EAAV,EAAUA,IAAV,OACVkB,EAAM,IAAMD,EAAOE,OACjB,+BAAiBb,GAANY,GAEX,qCACE,cAAC,IAAD,CAAgBnB,GAAIC,EAApB,SACGM,GADQY,GAGX,sCAAWA,a","file":"static/js/7.95aef572.chunk.js","sourcesContent":["import { Route, Link } from 'react-router-dom';\n\nimport './ProjectCard.css';\n\nconst ProjectCard = ({ match, subRoute }) => {\n  return (\n    <>\n      {match.isExact && (\n        <div className=\"project-card\">\n          <Link to={`${match.url}/${subRoute.name}`}>\n            <div\n              class=\"card-image\"\n              style={{\n                backgroundImage:\n                  `url(${subRoute.thumbnail})`,\n              }}\n            ></div>\n            <div className=\"container\">\n              <h4>\n                <b>{subRoute.title}</b>\n              </h4>\n              <p>{subRoute.desc}</p>\n            </div>\n          </Link>\n        </div>\n      )}\n      <Route\n        path={`${match.path}/${subRoute.name}`}\n        component={subRoute.component}\n      />\n    </>\n  );\n};\n\nexport default ProjectCard;\n","import React, { lazy } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport ProjectCard from './components/ProjectCard';\nimport Breadcrumbs from './Breadcrumbs';\nimport paths from '../paths';\n\n// import weatherAppThumbnail from '%PUBLIC_URL%/images/thumbnails/WeatherApp';\n\nimport { useTranslation } from 'react-i18next';\n\nimport './Frontend.css';\n\nconst Frontend = ({ match }) => {\n  const { t } = useTranslation();\n  const subRoutes = [\n    {\n      name: 'photos',\n      component: lazy(() => import('./components/Photos')),\n      title: t('projects.gardenPhotoGallery-title'),\n      desc: t('projects.gardenPhotoGallery-desc'),\n      thumbnail: 'images/thumbnails/WeatherApp.webp',\n    },\n    {\n      name: 'weather',\n      component: lazy(() => import('./components/Weather')),\n      title: t('projects.weatherApp-title'),\n      desc: t('projects.weatherApp-desc'),\n      thumbnail: '/images/thumbnails/WeatherApp.webp',\n    },\n    {\n      name: 'ibanChecker',\n      component: lazy(() => import('./components/IbanChecker')),\n      title: t('projects.ibanChecker-title'),\n      desc: t('projects.ibanChecker-desc'),\n      thumbnail: 'images/thumbnails/WeatherApp.webp',\n    },\n  ];\n\n  return (\n    <div className=\"Frontend\">\n\n      {subRoutes.map((subRoute) => (\n        <>\n          <ProjectCard match={match} subRoute={subRoute} />\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default Frontend;\n","import Frontend from './Frontend.jsx'\n\nexport default Frontend","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Breadcrumbs = ({ crumbs }) => {\n  // Don't render a single breadcrumb.\n  // if (crumbs.length <= 1) {\n  //   return null;\n  // }\n  return (\n    <div>\n      {/* Link back to any previous steps of the breadcrumb. */}\n      {crumbs.map(({ title, url }, key) =>\n        key + 1 === crumbs.length ? (\n          <span key={key}>{title}</span>\n        ) : (\n          <>\n            <Link key={key} to={url}>\n              {title}\n            </Link>\n            <span key={key}> / </span>\n          </>\n        )\n      )}\n    </div>\n  );\n};\nexport default Breadcrumbs;\n"],"sourceRoot":""}